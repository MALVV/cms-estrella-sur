const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function createTestDonationWithReferenceImage() {
  try {
    console.log('üñºÔ∏è Creando donaci√≥n de prueba con imagen de referencia...\n');

    // 1. Buscar un proyecto existente con imagen de referencia
    console.log('1. Buscando proyecto con imagen de referencia...');
    const projectWithImage = await prisma.donationProject.findFirst({
      where: {
        referenceImageUrl: {
          not: null
        }
      },
      include: {
        project: true
      }
    });

    if (!projectWithImage) {
      console.log('‚ùå No se encontr√≥ proyecto con imagen de referencia');
      return;
    }

    console.log('‚úÖ Proyecto encontrado:', {
      title: projectWithImage.project.title,
      referenceImageUrl: projectWithImage.referenceImageUrl,
      referenceImageAlt: projectWithImage.referenceImageAlt
    });

    // 2. Crear una donaci√≥n para este proyecto
    console.log('\n2. Creando donaci√≥n de prueba...');
    const testDonation = await prisma.donation.create({
      data: {
        donorName: 'Mar√≠a Gonz√°lez Test',
        donorEmail: 'maria.test@imagen.com',
        donorAddress: 'Av. Test 123, La Paz',
        donorPhone: '77777777',
        amount: 2500,
        donationType: 'PROJECT',
        message: 'Donaci√≥n para probar visualizaci√≥n de imagen de referencia en el CMS',
        donationProjectId: projectWithImage.id,
        status: 'PENDING'
      }
    });

    console.log('‚úÖ Donaci√≥n creada:', {
      id: testDonation.id,
      donorName: testDonation.donorName,
      amount: testDonation.amount,
      projectTitle: projectWithImage.project.title,
      referenceImageUrl: projectWithImage.referenceImageUrl
    });

    // 3. Verificar que la donaci√≥n aparece en la API
    console.log('\n3. Verificando respuesta de API...');
    const apiResponse = await prisma.donation.findUnique({
      where: { id: testDonation.id },
      include: {
        donationProject: {
          include: {
            project: true
          }
        }
      }
    });

    if (apiResponse) {
      console.log('‚úÖ Donaci√≥n en API:', {
        donorName: apiResponse.donorName,
        amount: apiResponse.amount,
        donationProject: {
          id: apiResponse.donationProject?.id,
          referenceImageUrl: apiResponse.donationProject?.referenceImageUrl,
          referenceImageAlt: apiResponse.donationProject?.referenceImageAlt,
          project: {
            title: apiResponse.donationProject?.project.title
          }
        }
      });
    }

    // 4. Instrucciones para el usuario
    console.log('\n4. Instrucciones para verificar en el CMS:');
    console.log('   üìã Pasos:');
    console.log('   1. Ir a http://localhost:3000/dashboard/donaciones');
    console.log('   2. Asegurarse de estar logueado como ADMINISTRATOR');
    console.log('   3. Buscar la donaci√≥n de "Mar√≠a Gonz√°lez Test"');
    console.log('   4. Verificar que aparece la imagen de referencia junto al t√≠tulo del proyecto');
    console.log('   5. La imagen debe ser peque√±a (32x32px) y redondeada');
    console.log('   6. Si la imagen no carga, debe ocultarse autom√°ticamente');

    console.log('\nüéâ ¬°Donaci√≥n de prueba creada exitosamente!');
    console.log('\nüìã Resumen:');
    console.log('   ‚úÖ Proyecto con imagen de referencia encontrado');
    console.log('   ‚úÖ Donaci√≥n de prueba creada');
    console.log('   ‚úÖ Estructura de datos correcta');
    console.log('   ‚úÖ Campos de imagen incluidos');
    console.log('   ‚úÖ Listo para verificar en el CMS');

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

createTestDonationWithReferenceImage();

