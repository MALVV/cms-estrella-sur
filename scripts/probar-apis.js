// Script para probar las APIs p√∫blicas
const fetch = require('node-fetch');

async function probarAPIs() {
  const baseUrl = 'http://localhost:3000';
  
  try {
    console.log('üß™ Probando APIs p√∫blicas...\n');

    // Probar API de metodolog√≠as
    console.log('üìö Probando /api/public/methodologies...');
    try {
      const methodologiesResponse = await fetch(`${baseUrl}/api/public/methodologies`);
      console.log(`Status: ${methodologiesResponse.status}`);
      
      if (methodologiesResponse.ok) {
        const methodologiesData = await methodologiesResponse.json();
        console.log(`‚úÖ Metodolog√≠as encontradas: ${methodologiesData.length}`);
        methodologiesData.forEach(m => {
          console.log(`  ‚Ä¢ "${m.title}" (${m.category})`);
        });
      } else {
        console.log('‚ùå Error en API de metodolog√≠as');
      }
    } catch (error) {
      console.log('‚ùå Error conectando a API de metodolog√≠as:', error.message);
    }

    // Probar API de proyectos
    console.log('\nüöÄ Probando /api/public/projects...');
    try {
      const projectsResponse = await fetch(`${baseUrl}/api/public/projects`);
      console.log(`Status: ${projectsResponse.status}`);
      
      if (projectsResponse.ok) {
        const projectsData = await projectsResponse.json();
        console.log(`‚úÖ Proyectos encontrados: ${projectsData.length}`);
        projectsData.forEach(p => {
          console.log(`  ‚Ä¢ "${p.title}"`);
        });
      } else {
        console.log('‚ùå Error en API de proyectos');
      }
    } catch (error) {
      console.log('‚ùå Error conectando a API de proyectos:', error.message);
    }

    // Probar API de programas
    console.log('\nüìã Probando /api/public/programas...');
    try {
      const programasResponse = await fetch(`${baseUrl}/api/public/programas`);
      console.log(`Status: ${programasResponse.status}`);
      
      if (programasResponse.ok) {
        const programasData = await programasResponse.json();
        console.log(`‚úÖ Programas encontrados: ${programasData.programas?.length || programasData.length}`);
        const programas = programasData.programas || programasData;
        programas.forEach(p => {
          console.log(`  ‚Ä¢ "${p.nombreSector}"`);
        });
      } else {
        console.log('‚ùå Error en API de programas');
      }
    } catch (error) {
      console.log('‚ùå Error conectando a API de programas:', error.message);
    }

    console.log('\nüéØ DIAGN√ìSTICO:');
    console.log('Si las APIs est√°n funcionando pero las p√°ginas no muestran datos:');
    console.log('1. Verificar la consola del navegador para errores JavaScript');
    console.log('2. Verificar que el servidor de desarrollo est√© corriendo');
    console.log('3. Verificar que no haya errores de CORS');
    console.log('4. Verificar que las p√°ginas est√©n usando las URLs correctas');

  } catch (error) {
    console.error('‚ùå Error general:', error);
  }
}

probarAPIs();
