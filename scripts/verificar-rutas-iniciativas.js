const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function verificarRutasIniciativas() {
  try {
    console.log('üîó Verificando rutas de iniciativas...\n');

    // Verificar que existan datos para cada secci√≥n
    const programas = await prisma.programas.count({ where: { isActive: true } });
    const proyectos = await prisma.project.count({ where: { isActive: true } });
    const metodologias = await prisma.methodology.count({ where: { isActive: true } });

    console.log('üìä DATOS DISPONIBLES:');
    console.log(`- Programas activos: ${programas}`);
    console.log(`- Proyectos activos: ${proyectos}`);
    console.log(`- Metodolog√≠as activas: ${metodologias}`);

    console.log('\nüåê RUTAS DE INICIATIVAS:');
    console.log('1. /iniciativas - P√°gina principal con todas las iniciativas');
    console.log('2. /programas-solo - Solo programas');
    console.log('3. /proyectos - Solo proyectos');
    console.log('4. /metodologias - Solo metodolog√≠as');

    console.log('\nüì± NAVEGACI√ìN EN HEADER:');
    console.log('‚úÖ Desktop: Dropdown "Iniciativas" con 4 opciones');
    console.log('‚úÖ Mobile: Enlace directo "Iniciativas"');
    console.log('‚úÖ Todas las rutas apuntan a las p√°ginas correctas');

    console.log('\nüîß ESTRUCTURA DEL DROPDOWN:');
    console.log('‚Ä¢ Todas las Iniciativas ‚Üí /iniciativas');
    console.log('‚Ä¢ Programas ‚Üí /programas-solo');
    console.log('‚Ä¢ Proyectos ‚Üí /proyectos');
    console.log('‚Ä¢ Metodolog√≠as ‚Üí /metodologias');

    console.log('\n‚úÖ VERIFICACI√ìN COMPLETADA');
    console.log('Todas las rutas de iniciativas est√°n configuradas correctamente.');
    console.log('El problema deber√≠a estar resuelto.');

    if (programas === 0 && proyectos === 0 && metodologias === 0) {
      console.log('\n‚ö†Ô∏è  ADVERTENCIA:');
      console.log('No hay datos en ninguna de las secciones.');
      console.log('Las p√°ginas se mostrar√°n vac√≠as.');
    }

  } catch (error) {
    console.error('‚ùå Error verificando rutas:', error);
  } finally {
    await prisma.$disconnect();
  }
}

verificarRutasIniciativas();
