const http = require('http');

function testCompleteSystem() {
  console.log('üéØ Probando sistema completo de im√°genes de programas...\n');
  
  const options = {
    hostname: 'localhost',
    port: 3000,
    path: '/api/public/programas',
    method: 'GET'
  };

  const req = http.request(options, (res) => {
    let data = '';

    res.on('data', (chunk) => {
      data += chunk;
    });

    res.on('end', () => {
      try {
        const jsonData = JSON.parse(data);
        
        console.log(`üìä Total programas: ${jsonData.programas.length}`);
        
        // Categorizar programas
        const programsWithCustomImages = jsonData.programas.filter(p => p.imageUrl && p.imageUrl.trim() !== '');
        const featuredPrograms = jsonData.programas.filter(p => p.isFeatured);
        const programsWithoutImages = jsonData.programas.filter(p => !p.imageUrl || p.imageUrl.trim() === '');
        
        console.log(`\nüìà Estad√≠sticas:`);
        console.log(`   ‚Ä¢ Programas con imagen personalizada: ${programsWithCustomImages.length}`);
        console.log(`   ‚Ä¢ Programas destacados: ${featuredPrograms.length}`);
        console.log(`   ‚Ä¢ Programas sin imagen personalizada: ${programsWithoutImages.length}`);
        
        console.log(`\n‚≠ê Programas destacados:`);
        featuredPrograms.forEach((programa, index) => {
          const hasImage = programa.imageUrl && programa.imageUrl.trim() !== '';
          console.log(`\n${index + 1}. ${programa.nombreSector}`);
          console.log(`   Destacado: ${programa.isFeatured ? '‚úÖ S√≠' : '‚ùå No'}`);
          console.log(`   Imagen personalizada: ${hasImage ? '‚úÖ S√≠' : '‚ùå No (usar√° fallback)'}`);
          if (hasImage) {
            console.log(`   Alt text: ${programa.imageAlt || '‚ùå Sin alt text'}`);
          }
        });
        
        console.log(`\nüñºÔ∏è  Programas con imagen personalizada:`);
        programsWithCustomImages.forEach((programa, index) => {
          console.log(`\n${index + 1}. ${programa.nombreSector}`);
          console.log(`   Destacado: ${programa.isFeatured ? '‚úÖ S√≠' : '‚ùå No'}`);
          console.log(`   URL: ${programa.imageUrl.substring(0, 50)}...`);
          console.log(`   Alt: ${programa.imageAlt || '‚ùå Sin alt text'}`);
        });
        
        console.log(`\nüìã Programas sin imagen personalizada:`);
        programsWithoutImages.forEach((programa, index) => {
          console.log(`\n${index + 1}. ${programa.nombreSector}`);
          console.log(`   Destacado: ${programa.isFeatured ? '‚úÖ S√≠' : '‚ùå No'}`);
          console.log(`   Usar√° imagen de fallback`);
        });
        
        console.log(`\n‚úÖ Sistema funcionando correctamente:`);
        console.log(`   ‚Ä¢ API devuelve campos imageUrl e imageAlt`);
        console.log(`   ‚Ä¢ Programas destacados tienen im√°genes configuradas`);
        console.log(`   ‚Ä¢ Sistema maneja programas sin im√°genes con fallbacks`);
        console.log(`   ‚Ä¢ Frontend mostrar√° im√°genes personalizadas cuando est√©n disponibles`);
        
      } catch (error) {
        console.error('‚ùå Error parsing JSON:', error.message);
        console.log('Raw response:', data.substring(0, 200) + '...');
      }
    });
  });

  req.on('error', (error) => {
    console.error('‚ùå Error:', error.message);
  });

  req.end();
}

// Ejecutar solo si es llamado directamente
if (require.main === module) {
  testCompleteSystem();
}

module.exports = { testCompleteSystem };
