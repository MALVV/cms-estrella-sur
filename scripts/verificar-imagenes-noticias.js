const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function verificarImagenesNoticias() {
  try {
    console.log('üì∞ Verificando im√°genes en noticias...\n');

    // Verificar noticias con im√°genes
    const noticiasConImagenes = await prisma.news.findMany({
      where: { 
        isActive: true,
        imageUrl: { not: null }
      },
      select: {
        id: true,
        title: true,
        imageUrl: true,
        imageAlt: true,
        category: true,
        isFeatured: true,
        publishedAt: true
      },
      take: 10
    });

    console.log('üìã NOTICIAS CON IM√ÅGENES:');
    noticiasConImagenes.forEach((noticia, index) => {
      console.log(`  ${index + 1}. "${noticia.title}"`);
      console.log(`     üè∑Ô∏è Categor√≠a: ${noticia.category}`);
      console.log(`     ‚≠ê Destacada: ${noticia.isFeatured ? 'S√≠' : 'No'}`);
      console.log(`     üìÖ Publicada: ${noticia.publishedAt}`);
      console.log(`     üéØ Imagen: ${noticia.imageAlt || 'Sin t√≠tulo'}`);
      console.log(`     üì∑ URL: ${noticia.imageUrl}`);
      console.log('');
    });

    // Verificar totales
    const totalNoticias = await prisma.news.count({ where: { isActive: true } });
    const noticiasConImg = await prisma.news.count({
      where: {
        isActive: true,
        imageUrl: { not: null }
      }
    });

    console.log('üìä RESUMEN:');
    console.log(`- Total de noticias activas: ${totalNoticias}`);
    console.log(`- Noticias con im√°genes: ${noticiasConImg}`);
    console.log(`- Porcentaje con im√°genes: ${totalNoticias > 0 ? Math.round((noticiasConImg / totalNoticias) * 100) : 0}%`);

    if (noticiasConImg === 0) {
      console.log('\n‚ö†Ô∏è  PROBLEMA IDENTIFICADO:');
      console.log('No hay noticias con im√°genes en la base de datos.');
      console.log('Esto explica por qu√© no se muestran im√°genes en la p√°gina de detalle.');
    } else {
      console.log('\n‚úÖ Las noticias tienen im√°genes disponibles.');
      console.log('El problema podr√≠a estar en:');
      console.log('1. La API p√∫blica de noticias');
      console.log('2. El componente Image de Next.js');
      console.log('3. Las URLs de las im√°genes');
    }

  } catch (error) {
    console.error('‚ùå Error verificando im√°genes:', error);
  } finally {
    await prisma.$disconnect();
  }
}

verificarImagenesNoticias();
